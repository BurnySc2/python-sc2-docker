name: Build and push to docker hub

on: [push, pull_request]

env:
  VERSION_NUMBER: 1.0.0

jobs:
  docker_build:
    name: Build docker image
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
        sc2-version: ['4.10']

    - uses: actions/checkout@v1

    - name: Build docker image
      run: |
        docker build -t burnysc2/python-sc2-docker:py_$PYTHON_VERSION-sc2_$SC2_VERSION-v${{ env.VERSION_NUMBER }} --build-arg PYTHON_VERSION=${{ matrix.python-version }} --build-arg SC2_VERSION=${{ matrix.sc2-version }} .

  docker_build_and_push:
    name: Build and push docker image
    runs-on: ${{ matrix.os }}
    needs: [docker_build]
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
        sc2-version: ['4.10']

    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: burnysc2/python-sc2-docker:py_${{ matrix.python-version }}-sc2_${{ matrix.sc2-version }}-v${{ env.VERSION_NUMBER }}
        build-args: |
          PYTHON_VERSION=${{ matrix.python-version }}
          SC2_VERSION=${{ matrix.sc2-version }}
