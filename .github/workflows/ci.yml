name: Build and push to docker hub

on: [push, pull_request]

# Docker image version
env:
  VERSION_NUMBER: '1.0.0'
  LATEST_PYTHON_VERSION: '3.10'
  LATEST_SC2_VERSION: '4.10'

jobs:
  docker_build:
    name: Build docker image
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
        sc2-version: ['4.10']

    steps:
    - uses: actions/checkout@v1

    - name: Build docker image
      run: |
        docker build -t burnysc2/python-sc2-docker:py_${{ matrix.python-version }}-sc2_${{ matrix.sc2-version }}-v${{ env.VERSION_NUMBER }} --build-arg PYTHON_VERSION=${{ matrix.python-version }} --build-arg SC2_VERSION=${{ matrix.sc2-version }} .

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Upload docker image
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: |
        docker push burnysc2/python-sc2-docker:py_${{ matrix.python-version }}-sc2_${{ matrix.sc2-version }}-v${{ env.VERSION_NUMBER }}

    - name: Upload docker image with latest tag
      if: github.ref == 'refs/heads/master' && github.event_name == 'push' && matrix.python-version == env.LATEST_PYTHON_VERSION && matrix.sc2-version == env.LATEST_SC2_VERSION
      run: |
        docker tag burnysc2/python-sc2-docker:py_${{ matrix.python-version }}-sc2_${{ matrix.sc2-version }}-v${{ env.VERSION_NUMBER }} burnysc2/python-sc2-docker:latest
        docker push burnysc2/python-sc2-docker:latest

